name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Run tests for each service
        run: |
          services=("client" "comments" "event-bus" "moderation" "posts" "query")
          for service in "${services[@]}"; do
            cd $service
            npm install
            npm test
            cd ..
          done

      - name: Build and push Docker images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_IMAGE_TAG: latest
        run: |
          services=("client" "comments" "event-bus" "moderation" "posts" "query")
          for service in "${services[@]}"; do
            docker build -t your-docker-hub-username/$service:$DOCKER_IMAGE_TAG $service
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker push your-docker-hub-username/$service:$DOCKER_IMAGE_TAG
          done

      - name: SonarQube scan
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npm install -g sonarqube-scanner
          sonar-scanner -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN

# You can add more steps or stages as needed.
